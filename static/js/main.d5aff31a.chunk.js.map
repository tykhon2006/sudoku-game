{"version":3,"sources":["components/main/Menu.jsx","components/main/Easy.jsx","store/easyReducer.js","components/main/EasyContainer.jsx","components/main/Win.jsx","components/main/GameOver.jsx","components/main/Medium.jsx","components/main/MediumContainer.jsx","components/main/Hard.jsx","components/main/HardContainer.jsx","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["Menu","className","to","withRouter","props","useEffect","errors","startGame","history","push","matrix","some","i","isWin","window","onpopstate","useState","indexArr","newIndexArr","setValue","e","target","dataset","value","values","map","onClick","data-value","tbody","tr","trIndex","td","index","id","type","name","htmlFor","SET_VALUE","START_GAME","dataSet","chooseMatrix","Math","floor","random","this","optionMatrix","length","initialState","randomChoose","state","randomOption","start","JSON","stringify","parse","end","easyReducer","action","newState","connect","level1","Easy","Win","GameOver","Medium","Hard","App","path","exact","render","EasyContainer","MediumContainer","HardContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d5aff31a.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\"\r\n\r\nexport const Menu = ()=>{\r\n    return(\r\n        <div>\r\n            <ul className=\"mainMenu\">\r\n                <li>\r\n                    <NavLink className=\"mainMenu__link\" to=\"/easy\">Easy</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink className=\"mainMenu__link\" to=\"/medium\">Medium</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink className=\"mainMenu__link\" to=\"/hard\">Hard</NavLink>\r\n                </li>\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\nconst Easy = (props) => {\r\n\r\n  const isWin = () => {\r\n    for (let arr of props.matrix) {\r\n      if (arr.some((i) => i === 0)) return;\r\n    }\r\n    props.startGame();\r\n    props.history.push(\"/win\");\r\n  }\r\n  const isOver = () => {\r\n    if (props.errors >= 3) {\r\n      props.startGame();\r\n      props.history.push(\"/gameOver\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isOver();\r\n    isWin();\r\n    window.onpopstate = props.startGame;\r\n  }, [props.matrix, props.errors]);\r\n  const [indexArr, newIndexArr] = useState([0, 0]);\r\n  const setActiveInput = (a, b) => {\r\n    newIndexArr([a, b])\r\n  }\r\n  const setValue = e => props.setValue(e.target.dataset.value, indexArr)\r\n  const values = props.values.map(i => <span onClick={setValue} key={i} data-value={i} >{i}</span>)\r\n  const tbody = props.matrix.map((tr, trIndex) => {\r\n    return (\r\n      <tr key={`_${trIndex}`}>\r\n        {tr.map((td, index) => {\r\n          return (\r\n            <td key={`_${trIndex}_${index}`} onClick={() => setActiveInput(trIndex, index)}>\r\n              <input id={`_${trIndex}_${index}`} type=\"radio\" name=\"easy\" value={td} className=\"check\" ></input>\r\n              <label htmlFor={`_${trIndex}_${index}`} className=\"wrap ceil\">{td || \"\"}</label>\r\n            </td>\r\n\r\n          )\r\n        })}\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"easy\">\r\n      <table className=\"table\"><tbody>{tbody}</tbody></table>\r\n      <div className=\"wrap variants\">{values}</div>\r\n      <div className=\"wrap error\">Errors: {props.errors}/3</div>\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(Easy);","const SET_VALUE = \"SET-VALUE\";\r\nconst START_GAME = \"START-GAME\";\r\nconst dataSet = {\r\n\r\n    chooseMatrix() {\r\n        return Math.floor(Math.random() * this.optionMatrix.length);\r\n    },\r\n    optionMatrix: [\r\n        [\r\n            [\r\n                [1, 2, 3, 5, 4, 6],\r\n                [6, 5, 4, 3, 1, 2],\r\n                [2, 6, 1, 4, 5, 3],\r\n                [4, 3, 5, 6, 2, 1],\r\n                [3, 4, 2, 1, 6, 5],\r\n                [5, 1, 6, 2, 3, 4],\r\n            ],\r\n            [\r\n                [0, 2, 3, 0, 4, 6],\r\n                [0, 5, 4, 3, 1, 2],\r\n                [2, 6, 1, 0, 0, 0],\r\n                [0, 3, 0, 0, 0, 0],\r\n                [0, 0, 2, 0, 0, 0],\r\n                [5, 0, 0, 0, 0, 4],\r\n            ],\r\n        ],\r\n        [\r\n            [\r\n                [1, 2, 3, 5, 4, 6],\r\n                [4, 5, 6, 3, 1, 2],\r\n                [2, 6, 1, 4, 5, 3],\r\n                [4, 3, 5, 6, 2, 1],\r\n                [3, 4, 2, 1, 6, 5],\r\n                [5, 1, 6, 2, 3, 4],\r\n            ],\r\n            [\r\n                [0, 2, 3, 0, 4, 6],\r\n                [0, 5, 6, 3, 1, 2],\r\n                [2, 0, 1, 0, 5, 0],\r\n                [0, 0, 5, 0, 0, 0],\r\n                [0, 0, 2, 0, 0, 1],\r\n                [5, 1, 0, 2, 3, 0],\r\n            ],\r\n        ],\r\n        [\r\n            [\r\n                [1, 2, 3, 5, 4, 6],\r\n                [6, 5, 4, 3, 1, 2],\r\n                [2, 6, 1, 4, 5, 3],\r\n                [4, 3, 5, 6, 2, 1],\r\n                [3, 4, 2, 1, 6, 5],\r\n                [5, 1, 6, 2, 3, 4],\r\n            ],\r\n            [\r\n                [1, 0, 3, 5, 0, 6],\r\n                [0, 5, 4, 3, 1, 2],\r\n                [0, 6, 1, 0, 0, 0],\r\n                [4, 3, 0, 0, 0, 1],\r\n                [0, 4, 2, 1, 0, 0],\r\n                [5, 0, 0, 2, 0, 4],\r\n            ],\r\n        ] \r\n    ]\r\n}\r\nconst initialState = {\r\n    matrix: {},\r\n    values: [1, 2, 3, 4, 5, 6],\r\n    errors: 0,\r\n}\r\n\r\nconst randomChoose = (state, dataSet) => {\r\n    let randomOption = dataSet.chooseMatrix();\r\n    let start = JSON.stringify(dataSet.optionMatrix[randomOption][1]);\r\n    start = JSON.parse(start);\r\n    let end = JSON.stringify(dataSet.optionMatrix[randomOption][0]);\r\n    end = JSON.parse(end);\r\n    return {\r\n        ...state,\r\n        matrix: {\r\n            ...state.matrix,\r\n            start,\r\n            end\r\n        },\r\n        errors: 0,\r\n    }\r\n}\r\n\r\nconst easyReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_VALUE:\r\n            let newState = {\r\n                ...state,\r\n                matrix: {\r\n                    ...state.matrix,\r\n                    start: [\r\n                        ...state.matrix.start,\r\n                    ]\r\n                }\r\n            }\r\n            if (state.matrix.end[action.indexArr[0]][action.indexArr[1]] === +action.value) {\r\n                newState.matrix.start[action.indexArr[0]][action.indexArr[1]] = +action.value\r\n            } else {\r\n                newState.errors++\r\n            }\r\n            return newState;\r\n        case START_GAME:\r\n            return randomChoose(state, dataSet);\r\n    }\r\n    return randomChoose(state, dataSet);\r\n}\r\nexport const setValue = (value, indexArr) => ({ type: SET_VALUE, value, indexArr });\r\nexport const startGame = () => ({ type: START_GAME });\r\nexport default easyReducer;","import { connect } from \"react-redux\";\r\nimport Easy from \"./Easy\";\r\nimport {setValue, startGame} from \"../../store/easyReducer\"\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        matrix: state.level1.matrix.start,\r\n        values: state.level1.values,\r\n        errors: state.level1.errors,\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps, {setValue, startGame})(Easy);","import { NavLink } from \"react-router-dom\"\r\n\r\nconst Win = () => {\r\n    return (\r\n        <div>\r\n            <h1>You win!</h1>\r\n            <NavLink className=\"mainMenu__link\" to=\"/menu\">Play again</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default Win;","import { NavLink } from \"react-router-dom\"\r\n\r\nconst GameOver = () => {\r\n    return (\r\n        <div>\r\n            <h1>You lose!</h1>\r\n            <NavLink className=\"mainMenu__link\" to=\"/menu\">Play again</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default GameOver;","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\nconst Medium = (props) => {\r\n\r\n  const isWin = () => {\r\n    for (let arr of props.matrix) {\r\n      if (arr.some((i) => i === 0)) return;\r\n    }\r\n    props.startGame();\r\n    props.history.push(\"/win\");\r\n  }\r\n  const isOver = () => {\r\n    if (props.errors >= 2) {\r\n      props.startGame();\r\n      props.history.push(\"/gameOver\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isOver();\r\n    isWin();\r\n    window.onpopstate = props.startGame;\r\n  }, [props.matrix, props.errors]);\r\n  const [indexArr, newIndexArr] = useState([0, 0]);\r\n  const setActiveInput = (a, b) => {\r\n    newIndexArr([a, b])\r\n  }\r\n  const setValue = e => props.setValue(e.target.dataset.value, indexArr)\r\n  const values = props.values.map(i => <span onClick={setValue} key={i} data-value={i} >{i}</span>)\r\n  const tbody = props.matrix.map((tr, trIndex) => {\r\n    return (\r\n      <tr key={`_${trIndex}`}>\r\n        {tr.map((td, index) => {\r\n          return (\r\n            <td key={`_${trIndex}_${index}`} onClick={() => setActiveInput(trIndex, index)}>\r\n              <input id={`_${trIndex}_${index}`} type=\"radio\" name=\"easy\" value={td} className=\"check\" ></input>\r\n              <label htmlFor={`_${trIndex}_${index}`} className=\"wrap ceil\">{td || \"\"}</label>\r\n            </td>\r\n\r\n          )\r\n        })}\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"easy\">\r\n      <table className=\"table\"><tbody>{tbody}</tbody></table>\r\n      <div className=\"wrap variants\">{values}</div>\r\n      <div className=\"wrap error\">Errors: {props.errors}/2</div>\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(Medium);","import { connect } from \"react-redux\";\r\nimport Medium from \"./Medium\";\r\nimport {setValue, startGame} from \"../../store/easyReducer\"\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        matrix: state.level1.matrix.start,\r\n        values: state.level1.values,\r\n        errors: state.level1.errors,\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps, {setValue, startGame})(Medium);","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\nconst Hard = (props) => {\r\n\r\n  const isWin = () => {\r\n    for (let arr of props.matrix) {\r\n      if (arr.some((i) => i === 0)) return;\r\n    }\r\n    props.startGame();\r\n    props.history.push(\"/win\");\r\n  }\r\n  const isOver = () => {\r\n    if (props.errors >= 1) {\r\n      props.startGame();\r\n      props.history.push(\"/gameOver\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isOver();\r\n    isWin();\r\n    window.onpopstate = props.startGame;\r\n  }, [props.matrix, props.errors]);\r\n  const [indexArr, newIndexArr] = useState([0, 0]);\r\n  const setActiveInput = (a, b) => {\r\n    newIndexArr([a, b])\r\n  }\r\n  const setValue = e => props.setValue(e.target.dataset.value, indexArr)\r\n  const values = props.values.map(i => <span onClick={setValue} key={i} data-value={i} >{i}</span>)\r\n  const tbody = props.matrix.map((tr, trIndex) => {\r\n    return (\r\n      <tr key={`_${trIndex}`}>\r\n        {tr.map((td, index) => {\r\n          return (\r\n            <td key={`_${trIndex}_${index}`} onClick={() => setActiveInput(trIndex, index)}>\r\n              <input id={`_${trIndex}_${index}`} type=\"radio\" name=\"easy\" value={td} className=\"check\" ></input>\r\n              <label htmlFor={`_${trIndex}_${index}`} className=\"wrap ceil\">{td || \"\"}</label>\r\n            </td>\r\n\r\n          )\r\n        })}\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"easy\">\r\n      <table className=\"table\"><tbody>{tbody}</tbody></table>\r\n      <div className=\"wrap variants\">{values}</div>\r\n      <div className=\"wrap error\">Errors: {props.errors}/1</div>\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(Hard);","import { connect } from \"react-redux\";\r\nimport Hard from \"./Hard\";\r\nimport {setValue, startGame} from \"../../store/easyReducer\"\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        matrix: state.level1.matrix.start,\r\n        values: state.level1.values,\r\n        errors: state.level1.errors,\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps, {setValue, startGame})(Hard);","\r\nimport { Route } from 'react-router';\r\nimport './App.scss';\r\nimport { Menu } from './components/main/Menu';\r\nimport EasyContainer from './components/main/EasyContainer';\r\nimport Win from './components/main/Win';\r\nimport GameOver from './components/main/GameOver';\r\nimport MediumContainer from './components/main/MediumContainer';\r\nimport HardContainer from './components/main/HardContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Route path={[\"/\", \"/menu\"]} exact render={() => <Menu />} />\r\n        <Route path=\"/easy\" render={()=> <EasyContainer />} />\r\n        <Route path=\"/win\" render={()=> <Win />} />\r\n        <Route path=\"/gameOver\" render={()=> <GameOver />} />\r\n        <Route path=\"/medium\" render={()=> <MediumContainer />} />\r\n        <Route path=\"/hard\" render={()=> <HardContainer />} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport easyReducer from \"./easyReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    level1: easyReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./store/store\"\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store = {store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>\r\n\r\n\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}